<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-03T03:08:53.773Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>DQ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php 获取当前域名、主机、URL等等</title>
    <link href="http://yoursite.com/2019/04/03/php/"/>
    <id>http://yoursite.com/2019/04/03/php/</id>
    <published>2019-04-03T02:27:20.000Z</published>
    <updated>2019-04-03T03:08:53.773Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">// 测试网址：http://localhost/home/cs.php?id=5</span><br><span class="line"></span><br><span class="line">// 获取域名或主机地址</span><br><span class="line">echo $_SERVER[&apos;HTTP_HOST&apos;].&quot;&lt;br&gt;&quot;; // localhost</span><br><span class="line"></span><br><span class="line">// 获取网页地址</span><br><span class="line">echo $_SERVER[&apos;PHP_SELF&apos;].&quot;&lt;br&gt;&quot;; // home/cs.php</span><br><span class="line"></span><br><span class="line">// 获取网址参数</span><br><span class="line">echo $_SERVER[&apos;QUERY_STRING&apos;].&quot;&lt;br&gt;&quot;; // id=5</span><br><span class="line"></span><br><span class="line">// 获取用户代理</span><br><span class="line">echo $_SERVER[&apos;HTTP_REFERER&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">// 获取完整的URL</span><br><span class="line">echo &apos;http://&apos;.$_SERVER[&apos;HTTP_HOST&apos;].$_SERVER[&apos;REQUEST_URI&apos;];</span><br><span class="line">echo &apos;http://&apos;.$_SERVER[&apos;HTTP_HOST&apos;].$_SERVER[&apos;PHP_SELF&apos;].&apos;?&apos;.$_SERVER[&apos;QUERY_STRING&apos;];</span><br><span class="line">// http://localhost/home/testurl.php?id=5</span><br><span class="line"></span><br><span class="line">// 包含端口号的完整URL</span><br><span class="line">echo &apos;http://&apos;.$_SERVER[&apos;SERVER_NAME&apos;].&apos;:&apos;.$_SERVER[&apos;SERVER_PORT&apos;].$_SERVER[&apos;REQUEST_URI&apos;];</span><br><span class="line">// http://localhost:80/home/cs.php?id=5</span><br><span class="line"></span><br><span class="line">// 只取路径</span><br><span class="line">$url =&apos;http://&apos;.$_SERVER[&apos;SERVER_NAME&apos;].$_SERVER[&apos;REQUEST_URI&apos;];</span><br><span class="line">echo dirname($url);</span><br><span class="line">// http://localhost/home</span><br><span class="line"></span><br><span class="line">// 获取当前服务器系统</span><br><span class="line">echo php_uname();</span><br><span class="line"></span><br><span class="line">// php运行方式</span><br><span class="line">echo php_sapi_name();</span><br><span class="line"></span><br><span class="line">// 获取服务器IP</span><br><span class="line">echo gethostbyname($_SERVER[&apos;SERVER_NAME&apos;]);</span><br><span class="line"></span><br><span class="line">// 获取PHP版本</span><br><span class="line">echo phpversion();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="php开发" scheme="http://yoursite.com/categories/php%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>laravel ApiServiceProvide跟setEventDispatcher的错</title>
    <link href="http://yoursite.com/2019/03/15/mac-laravel/"/>
    <id>http://yoursite.com/2019/03/15/mac-laravel/</id>
    <published>2019-03-15T08:58:28.000Z</published>
    <updated>2019-03-15T09:34:33.155Z</updated>
    
    <content type="html"><![CDATA[<p>今天运行之前写的laravel项目 突然偶遇两个错</p><h2 id="第一个："><a href="#第一个：" class="headerlink" title="第一个："></a>第一个：</h2><p><img src="/public/bog2.png" alt="aa" title="图片"></p><p>解决方法：<br>在laravel项目根目录里面的.env文件，并在.env文件中添加 API_PREFIX=api<br><img src="/public/bog-1.png" alt="aa-1" title="图片"><br>第一个bog就这么愉快的解决了。</p><h2 id="第二个："><a href="#第二个：" class="headerlink" title="第二个："></a>第二个：</h2><p><img src="/public/bog1.png" alt="bb" title="图片"></p><p>解决方法：<br>在laravel项目里面找到此目录”config/app.php”，并在app.php文件里面添加一下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'aliases'</span> =&gt; [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">'setEventDispatcher'</span> =&gt; Illuminate\Events\Dispatcher::class,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>然后保存，重新运行就OK了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天运行之前写的laravel项目 突然偶遇两个错&lt;/p&gt;
&lt;h2 id=&quot;第一个：&quot;&gt;&lt;a href=&quot;#第一个：&quot; class=&quot;headerlink&quot; title=&quot;第一个：&quot;&gt;&lt;/a&gt;第一个：&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/public/bog2.png&quot; a
      
    
    </summary>
    
      <category term="php开发" scheme="http://yoursite.com/categories/php%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
      <category term="php7.3" scheme="http://yoursite.com/tags/php7-3/"/>
    
      <category term="mysql8.0" scheme="http://yoursite.com/tags/mysql8-0/"/>
    
      <category term="laravel5.6" scheme="http://yoursite.com/tags/laravel5-6/"/>
    
  </entry>
  
  <entry>
    <title>Mac下使用Docker-compose搭建nginx+php+mysql环境</title>
    <link href="http://yoursite.com/2018/11/23/mac-docker-compose-nginx-php-mysql/"/>
    <id>http://yoursite.com/2018/11/23/mac-docker-compose-nginx-php-mysql/</id>
    <published>2018-11-23T08:09:01.000Z</published>
    <updated>2018-11-30T08:48:00.634Z</updated>
    
    <content type="html"><![CDATA[<p>Compose 是一个用户定义和运行多个容器的 Docker 应用程序。只需要一个简单的命令，就可以创建并启动你配置的所有服务。</p><p>使用 Compose 基本会有如下三步流程：</p><p>1.在 Dockfile 中定义你的应用环境，使其可以在任何地方复制。<br>2.在 docker-compose.yml 中定义组成应用程序的服务，以便它们可以在隔离的环境中一起运行。<br>3.最后，运行dcoker-compose up，Compose 将启动并运行整个应用程序。</p><p><strong>安装compose</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载最新版的docker-compose文件</span></span><br><span class="line">$ sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line">$ sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试安装结果</span></span><br><span class="line">$ docker-compose --version</span><br><span class="line">docker-compose version 1.16.1, build 6d1ac21</span><br></pre></td></tr></table></figure></p><p><strong>在宿主机上创建好共享给容器的文件，如 进入桌面 配置文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$PWD</span>/Docker-PHP/docker/conf/nginx <span class="variable">$PWD</span>/Docker-PHP/docker/php-fpm7.1 <span class="variable">$PWD</span>/Docker-php/<span class="built_in">log</span>/nginx</span><br><span class="line"><span class="comment"># docker       目录里的配置文件将映射为 nginx、php 容器的配置文件</span></span><br><span class="line"><span class="comment"># log          目录将映射为 nginx 容器的日志目录。</span></span><br></pre></td></tr></table></figure></p><p><strong>进入Desktop/Docker-PHP/docker/conf/nginx目录，创建nginx.conf文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim nginx.conf</span><br><span class="line"><span class="comment"># nginx.conf文件内容如下：</span></span><br><span class="line">user nginx;</span><br><span class="line">worker_processes 1;</span><br><span class="line">error_log /var/<span class="built_in">log</span>/nginx/error.log warn;</span><br><span class="line">pid /var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include /etc/nginx/mime.types;</span><br><span class="line"><span class="comment"># gzip  on;</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    log_format main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line">    access_log /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">    sendfile on;</span><br><span class="line"><span class="comment"># tcp_nopush     on;</span></span><br><span class="line">    keepalive_timeout 65;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 然后保存退出（wq）</span></span><br></pre></td></tr></table></figure></p><p><strong>进入创建的Desktop/Docker-PHP/docker/conf/nginx 目录,创建 conf.d 目录,再在进入 conf.d 目录里编写default.conf文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mkdir conf.d</span><br><span class="line"></span><br><span class="line">vim default.conf</span><br><span class="line"><span class="comment"># 内容如下：</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server ipv6only=on;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    root /var/www/html;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php<span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span> /index.php =404;</span><br><span class="line">        fastcgi_pass 7.1-fpm:9000;</span><br><span class="line">        fastcgi_split_path_info ^(.+\.php)(/.+)$;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ /\.ht &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 最后保存退出（wq）</span></span><br></pre></td></tr></table></figure></p><p><strong>再回到Desktop/Docker-PHP/docker/php-fpm7.1目录下编写Dockerfile文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim Dockerfile</span><br><span class="line"><span class="comment"># 内容如下：</span></span><br><span class="line">FROM php:7.1-fpm</span><br><span class="line"></span><br><span class="line">ENV TZ=Asia/Shanghai</span><br><span class="line"></span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y \</span><br><span class="line">    libfreetype6-dev \</span><br><span class="line">    libjpeg62-turbo-dev \</span><br><span class="line">    libmcrypt-dev \</span><br><span class="line">    <span class="comment"># libpng12-dev \</span></span><br><span class="line">    &amp;&amp; docker-php-ext-install -j$(nproc) iconv mcrypt mysqli pdo_mysql \</span><br><span class="line">    &amp;&amp; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \</span><br><span class="line">    &amp;&amp; docker-php-ext-install -j$(nproc) gd</span><br><span class="line"><span class="comment"># 然后保存退出（wq）</span></span><br></pre></td></tr></table></figure></p><p><strong>再在Docker-PHP目录下创建index.php文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim index.php</span><br><span class="line"><span class="comment"># 内容如下</span></span><br><span class="line">&lt;?php</span><br><span class="line">    phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><strong>Docker-PHP目录下编写docker-compose.yml文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br><span class="line">version: <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"><span class="comment">### Nginx Server Container ##################################</span></span><br><span class="line">    nginx:</span><br><span class="line">      <span class="comment"># nginx镜像的路径</span></span><br><span class="line">      image: nginx:alpine</span><br><span class="line"></span><br><span class="line">      <span class="comment"># 将宿主机上nginx配置文件跟日志目录映射到容器中</span></span><br><span class="line">      volumes:</span><br><span class="line">          - ./:/var/www/html</span><br><span class="line">          - ./docker/conf/nginx/nginx.conf:/etc/nginx/nginx.conf</span><br><span class="line">          - ./docker/conf/nginx/conf.d:/etc/nginx/conf.d</span><br><span class="line">          - ./<span class="built_in">log</span>/nginx/:/var/<span class="built_in">log</span>/nginx/:rw</span><br><span class="line"></span><br><span class="line">      <span class="comment"># 端口映射</span></span><br><span class="line">      ports:</span><br><span class="line">          - <span class="string">"8888:80"</span></span><br><span class="line">          - <span class="string">"8080:8080"</span></span><br><span class="line">          - <span class="string">"443:443"</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 依赖关系，需要先运行php</span></span><br><span class="line">      links:</span><br><span class="line">          - 7.1-fpm</span><br><span class="line"></span><br><span class="line">      <span class="comment"># 进程予赋特权权限</span></span><br><span class="line">      privileged: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">      networks:</span><br><span class="line">        - app_net</span><br><span class="line"></span><br><span class="line">      <span class="comment"># 容器名称</span></span><br><span class="line">      container_name: <span class="string">"Nginx"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### PHP-FPM 7.1 Container #######################################</span></span><br><span class="line">    7.1-fpm:</span><br><span class="line">        <span class="comment"># php镜像的路径</span></span><br><span class="line">        build:</span><br><span class="line">          context: ./docker/php-fpm7.1</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将宿主机上Docker-php根目录映射到容器中</span></span><br><span class="line">        volumes:</span><br><span class="line">          - ./:/var/www/html</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 端口映射</span></span><br><span class="line">        ports:</span><br><span class="line">          - <span class="string">"9000"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 依赖关系，需要先运行mysql</span></span><br><span class="line">        links:</span><br><span class="line">          - mysql</span><br><span class="line"></span><br><span class="line">        networks:</span><br><span class="line">          - app_net</span><br><span class="line">        <span class="comment"># 容器名称</span></span><br><span class="line">        container_name: <span class="string">"PHP-FMP-7.1"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## MySQL Container #########################################</span></span><br><span class="line">    mysql:</span><br><span class="line">        <span class="comment"># mysql镜像的路径</span></span><br><span class="line">        image: mysql:5.7</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 端口映射</span></span><br><span class="line">        ports:</span><br><span class="line">            - <span class="string">"3306:3306"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置 root 账号密码为 root</span></span><br><span class="line">        environment:</span><br><span class="line">            - MYSQL_ROOT_PASSWORD=root</span><br><span class="line"></span><br><span class="line">        networks:</span><br><span class="line">            - app_net</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 容器名称</span></span><br><span class="line">        container_name: <span class="string">"MySQL"</span></span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">    <span class="comment"># 配置docker 网络</span></span><br><span class="line">    app_net:</span><br><span class="line">        driver: bridge</span><br></pre></td></tr></table></figure></p><p>最后在Docker-PHP目录下运行 docker-compose up -d,运行成功后 访问浏览器 localhost：8888 不出意外会看到PHP配置信息，如图：<br><img src="/public/phpinfo.png" alt="图片" title="php信息"><br>看到上面的图片信息后表示安装成功。</p><p>这里可以去下载搭建好php环境 <a href="https://github.com/Teeoo/Docker-PHP" target="_blank" rel="noopener">https://github.com/Teeoo/Docker-PHP</a> ，里面Nginx、PHP7.2、PHP7.1、PHP5.6、MySQL等，还可以加载其他的 根据自己需要来。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Compose 是一个用户定义和运行多个容器的 Docker 应用程序。只需要一个简单的命令，就可以创建并启动你配置的所有服务。&lt;/p&gt;
&lt;p&gt;使用 Compose 基本会有如下三步流程：&lt;/p&gt;
&lt;p&gt;1.在 Dockfile 中定义你的应用环境，使其可以在任何地方复制。
      
    
    </summary>
    
      <category term="php开发" scheme="http://yoursite.com/categories/php%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="docker-compose" scheme="http://yoursite.com/tags/docker-compose/"/>
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mac下使用Docker搭建Nginx+Php7.2+Mysql环境</title>
    <link href="http://yoursite.com/2018/11/15/mac-docker-nginx-php-mysql/"/>
    <id>http://yoursite.com/2018/11/15/mac-docker-nginx-php-mysql/</id>
    <published>2018-11-15T09:29:08.000Z</published>
    <updated>2018-11-30T08:44:31.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask install Docker</span><br></pre></td></tr></table></figure><p>下载完后在载入 Docker app 后，点击 Next，可能会询问你的 macOS 登陆密码，你输入即可。之后会弹出一个 Docker 运行的提示窗口，状态栏上也有有个小鲸鱼的图标(<img src="/public/xjy.png" alt="图片" title="测试">)。</p><p>启动终端后，通过命令可以检查安装后的 Docker 版本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker --version</span><br></pre></td></tr></table></figure></p><h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><p>鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，我们可以需要配置加速器来解决，我使用的是网易的镜像地址：<a href="http://hub-mirror.c.163.com。" target="_blank" rel="noopener">http://hub-mirror.c.163.com。</a></p><p>在任务栏点击 Docker for mac 应用图标 -&gt; Perferences… -&gt; Daemon -&gt; Registry mirrors。在列表中填写加速器地址即可。修改完成之后，点击 Apply &amp; Restart 按钮，Docker 就会重启并应用配置的镜像地址了。<br><img src="/public/jxjs.png" alt="镜像加速" title="镜像加速"><br>之后我们可以通过 docker info 来查看是否配置成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker info</span><br><span class="line">...</span><br><span class="line">Registry Mirrors:</span><br><span class="line"> http://hub-mirror.c.163.com/</span><br><span class="line"> http://ead3d542.m.daocloud.io/</span><br><span class="line">Live Restore Enabled: <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull ubuntu:14:04</span><br></pre></td></tr></table></figure><p>下载好了以后，再设置以守护进程在后台运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit --name my-lnmp ubuntu:14.04</span><br></pre></td></tr></table></figure></p><h2 id="配置容器内的lnmp环境"><a href="#配置容器内的lnmp环境" class="headerlink" title="配置容器内的lnmp环境"></a>配置容器内的lnmp环境</h2><p>1.更换apt-get源提高安装速度<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入容器内部</span></span><br><span class="line">docker <span class="built_in">exec</span> -it my-lnmp bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行完后 更新</span></span><br><span class="line">apt-get update</span><br></pre></td></tr></table></figure></p><p>2.安装常用工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y curl vim unzip zip php-zip</span><br></pre></td></tr></table></figure></p><p>3.解决可能存在的语言问题<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y language-pack-en-base</span><br><span class="line">locale-gen en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_ALL=en_US.UTF-8</span><br></pre></td></tr></table></figure></p><p>4.安装Nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sudo apt-get install -y nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件位置</span></span><br><span class="line"><span class="comment"># /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment"># /etc/nginx/conf.d/*.conf</span></span><br><span class="line"><span class="comment"># 默认主目录</span></span><br><span class="line"><span class="comment"># /usr/share/nginx/html/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理nginx服务</span></span><br><span class="line">service nginx start/stop/restart  // 启动/停止/重启</span><br><span class="line"></span><br><span class="line">测试</span><br><span class="line">curl localhost</span><br></pre></td></tr></table></figure></p><p>如果出现Welcome to nginx!类似的字样，说明nginx安装成功了</p><p>5.安装PHP7.2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加PHP的仓库</span></span><br><span class="line">apt-get install -y software-properties-common</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加PHP源</span></span><br><span class="line">add-apt-repository ppa:ondrej/php</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装PHP7.2以及一些扩展 这里的版本跟扩展看自己需要的来</span></span><br><span class="line">apt-get install -y php7.2 php7.2-mysql php7.2-fpm php7.2-curl php7.2-xml php7.2-json php7.2-gd php7.2-mbstring php7.0-zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 (出来信息标示安装成功)</span></span><br><span class="line">php -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置php.ini</span></span><br><span class="line">vim /etc/php/7.2/fpm/php.ini</span><br><span class="line"><span class="comment"># 将cgi.fix_pathinfo=1这一行去掉注释，将1改为0</span></span><br><span class="line"><span class="comment">#&gt;  / 是vi查找的命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置php-fpm</span></span><br><span class="line">vim /etc/php/7.2/fpm/pool.d/www.conf</span><br><span class="line"><span class="comment"># 修改 listen = /var/run/php/php7.2-fpm.sock</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置nginx</span></span><br><span class="line">vim /etc/nginx/sites-enabled/default</span><br><span class="line"><span class="comment"># 将`index index.html index.htm;`改成`index index.php index.html index.htm;`</span></span><br><span class="line"><span class="comment"># 在`service`里面，`location /&#123;&#125;`下面增加以下配置</span></span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    fastcgi_split_path_info ^(.+\.php)(/.+)$;</span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> You should have "cgi.fix_pathinfo = 0;" in php.ini</span></span><br><span class="line">    <span class="comment"># With php5-cgi alone:</span></span><br><span class="line">    <span class="comment"># fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment"># With php5-fpm:</span></span><br><span class="line">    fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;</span><br><span class="line">    fastcgi_index index.php;</span><br><span class="line">    fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">    include fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>6.运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动php-fpm</span></span><br><span class="line">service php7.2-fpm start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 Nginx ，检测配置是否成功</span></span><br><span class="line">service nginx reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建项目目录，并给权限</span></span><br><span class="line">mkdir apps</span><br><span class="line">chmod -R 777 /apps/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建 index.php 测试文件</span></span><br><span class="line"><span class="comment"># 写入内容，保存(wq)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">curl localhost</span><br><span class="line"><span class="comment"># 如果看到`hello world!`表示运行成功</span></span><br></pre></td></tr></table></figure></p><h2 id="7-安装MySQL"><a href="#7-安装MySQL" class="headerlink" title="7.安装MySQL"></a>7.安装MySQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装过程中会提示输入密码及确认密码，输入即可</span></span><br><span class="line">apt-get install -y mysql-server-5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">service mysql start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="comment"># 输入密码后进入到mysql表示安装成功</span></span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="8-设置容器开机启动项"><a href="#8-设置容器开机启动项" class="headerlink" title="8.设置容器开机启动项"></a>8.设置容器开机启动项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在.bashrc写入开机启动项</span></span><br><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入以下内容，保存</span></span><br><span class="line"><span class="comment"># 开机启动项</span></span><br><span class="line">service php7.2-fpm start</span><br><span class="line">service mysql start</span><br><span class="line">service nginx start</span><br></pre></td></tr></table></figure><h2 id="9-安装composer"><a href="#9-安装composer" class="headerlink" title="9.安装composer"></a>9.安装composer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sudo curl -sS https://getcomposer.org/installer | sudo php -d detect_unicode=Off</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改文件权限</span></span><br><span class="line">sudo chmod a+x composer.phar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到全局安装文件夹</span></span><br><span class="line">sudo mv composer.phar /usr/<span class="built_in">local</span>/bin/composer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 Composer 源更换为国内</span></span><br><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试（输入版本信息就说明安装成功了）</span></span><br><span class="line">composer</span><br></pre></td></tr></table></figure><h2 id="10-将配置好的Docker容器，将容器打包成镜像-打包"><a href="#10-将配置好的Docker容器，将容器打包成镜像-打包" class="headerlink" title="10.将配置好的Docker容器，将容器打包成镜像,打包"></a>10.将配置好的Docker容器，将容器打包成镜像,打包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 退出 Docker</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前容器对应CONTAINER ID</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将容器打包新的镜像 (ID: 2c10b080cf8c)</span></span><br><span class="line">docker commit 2c10b080cf8c kfk-lnmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看新的镜像/Pull的镜像</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用刚打包的镜像，创建新的容器</span></span><br><span class="line">docker run -dit -p 80:80 -p 3306:3306 -v /var/www/:/apps/  --name nginx-mysql-php7.2-composer new-lnmp /bin/bash</span><br><span class="line"><span class="comment"># -p 端口映射</span></span><br><span class="line"><span class="comment"># -v 本地目录映射到容器内</span></span><br></pre></td></tr></table></figure><p>在浏览器通过访问<code>localhost</code>响应成功，则大功告成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装Docker&quot;&gt;&lt;a href=&quot;#安装Docker&quot; class=&quot;headerlink&quot; title=&quot;安装Docker&quot;&gt;&lt;/a&gt;安装Docker&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="php开发" scheme="http://yoursite.com/categories/php%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
</feed>
